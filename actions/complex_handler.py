from typing import Any, Text, Dict, List
from rasa_sdk import Action, Tracker
from rasa_sdk.executor import CollectingDispatcher
from textblob import TextBlob
import spacy

nlp = spacy.load("ru_core_news_lg")


class ActionHandleComplexMessage(Action):
    def name(self) -> Text:
        return "action_handle_complex_message"

    def run(self, dispatcher: CollectingDispatcher,
            tracker: Tracker,
            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:

        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏
        user_name = tracker.get_slot("user_name")
        if user_name:
            dispatcher.utter_message(text=f"üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {user_name}!")

        # –£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
        message = tracker.latest_message.get("text")
        doc = nlp(message)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        mood_keywords = {
            'positive': ['—Ä–∞–¥', '—Å—á–∞—Å—Ç–ª–∏–≤', '–≤–µ—Å–µ–ª–æ', '—Ö–æ—Ä–æ—à–æ'],
            'negative': ['–≥—Ä—É—Å—Ç–Ω–æ', '–ø–ª–æ—Ö–æ', '—É–∂–∞—Å–Ω–æ', '–ø–µ—á–∞–ª—å–Ω–æ']
        }

        detected_mood = None
        for token in doc:
            lemma = token.lemma_.lower()
            for mood, keywords in mood_keywords.items():
                if lemma in keywords:
                    detected_mood = mood
                    break

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞
        if detected_mood == 'positive':
            dispatcher.utter_message(text="üòä –†–∞–¥, —á—Ç–æ –≤–∞–º –≤–µ—Å–µ–ª–æ!")
        elif detected_mood == 'negative':
            dispatcher.utter_message(text="üòî –ú–Ω–µ –∂–∞–ª—å —ç—Ç–æ —Å–ª—ã—à–∞—Ç—å...")
        else:
            blob = TextBlob(message)
            polarity = blob.sentiment.polarity
            if polarity > 0.3:
                dispatcher.utter_message(text="üòÄ –ü–æ—Ö–æ–∂–µ, —É –≤–∞—Å —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!")
            elif polarity < -0.3:
                dispatcher.utter_message(text="üòü –û—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ –≤–∞–º –≥—Ä—É—Å—Ç–Ω–æ")

        return []